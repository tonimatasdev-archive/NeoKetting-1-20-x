--- a/net/minecraft/world/item/crafting/ShapedRecipe.java
+++ b/net/minecraft/world/item/crafting/ShapedRecipe.java
@@ -11,7 +_,7 @@
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.Level;
 
-public class ShapedRecipe implements CraftingRecipe {
+public class ShapedRecipe implements CraftingRecipe, net.neoforged.neoforge.common.crafting.IShapedRecipe<net.minecraft.world.inventory.CraftingContainer> {
     final ShapedRecipePattern pattern;
     final ItemStack result;
     final String group;
@@ -30,6 +_,68 @@
         this(p_250221_, p_250716_, p_312814_, p_248581_, true);
     }
 
+    // CraftBukkit start
+    @Override
+    public org.bukkit.inventory.ShapedRecipe toBukkitRecipe(org.bukkit.NamespacedKey id) {
+        org.bukkit.craftbukkit.v1_20_R3.inventory.CraftItemStack result = org.bukkit.craftbukkit.v1_20_R3.inventory.CraftItemStack.asCraftMirror(this.result);
+        org.bukkit.craftbukkit.v1_20_R3.inventory.CraftShapedRecipe recipe = new org.bukkit.craftbukkit.v1_20_R3.inventory.CraftShapedRecipe(id, result, this);
+        recipe.setGroup(this.group);
+        recipe.setCategory(org.bukkit.craftbukkit.v1_20_R3.inventory.CraftRecipe.getCategory(this.category()));
+
+        switch (this.pattern.height()) {
+            case 1:
+                switch (this.pattern.width()) {
+                    case 1:
+                        recipe.shape("a");
+                        break;
+                    case 2:
+                        recipe.shape("ab");
+                        break;
+                    case 3:
+                        recipe.shape("abc");
+                        break;
+                }
+                break;
+            case 2:
+                switch (this.pattern.width()) {
+                    case 1:
+                        recipe.shape("a","b");
+                        break;
+                    case 2:
+                        recipe.shape("ab","cd");
+                        break;
+                    case 3:
+                        recipe.shape("abc","def");
+                        break;
+                }
+                break;
+            case 3:
+                switch (this.pattern.width()) {
+                    case 1:
+                        recipe.shape("a","b","c");
+                        break;
+                    case 2:
+                        recipe.shape("ab","cd","ef");
+                        break;
+                    case 3:
+                        recipe.shape("abc","def","ghi");
+                        break;
+                }
+                break;
+        }
+        char c = 'a';
+        for (Ingredient list : this.pattern.ingredients()) {
+            org.bukkit.inventory.RecipeChoice choice = org.bukkit.craftbukkit.v1_20_R3.inventory.CraftRecipe.toBukkit(list);
+            if (choice != null) {
+                recipe.setIngredient(c, choice);
+            }
+
+            c++;
+        }
+        return recipe;
+    }
+    // CraftBukkit end
+
     @Override
     public RecipeSerializer<?> getSerializer() {
         return RecipeSerializer.SHAPED_RECIPE;
@@ -41,11 +_,21 @@
     }
 
     @Override
+    public int getRecipeWidth() {
+        return getWidth();
+    }
+
+    @Override
     public CraftingBookCategory category() {
         return this.category;
     }
 
     @Override
+    public int getRecipeHeight() {
+        return getHeight();
+    }
+
+    @Override
     public ItemStack getResultItem(RegistryAccess p_266881_) {
         return this.result;
     }
@@ -84,7 +_,7 @@
     @Override
     public boolean isIncomplete() {
         NonNullList<Ingredient> nonnulllist = this.getIngredients();
-        return nonnulllist.isEmpty() || nonnulllist.stream().filter(p_151277_ -> !p_151277_.isEmpty()).anyMatch(p_151273_ -> p_151273_.getItems().length == 0);
+        return nonnulllist.isEmpty() || nonnulllist.stream().filter(p_151277_ -> !p_151277_.isEmpty()).anyMatch(net.neoforged.neoforge.common.CommonHooks::hasNoElements);
     }
 
     public static class Serializer implements RecipeSerializer<ShapedRecipe> {
