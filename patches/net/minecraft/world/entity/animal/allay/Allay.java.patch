--- a/net/minecraft/world/entity/animal/allay/Allay.java
+++ b/net/minecraft/world/entity/animal/allay/Allay.java
@@ -112,6 +_,7 @@
     private float dancingAnimationTicks;
     private float spinningAnimationTicks;
     private float spinningAnimationTicks0;
+    public boolean forceDancing = false; // CraftBukkit
 
     public Allay(EntityType<? extends Allay> p_218310_, Level p_218311_) {
         super(p_218310_, p_218311_);
@@ -125,6 +_,12 @@
         );
     }
 
+    // CraftBukkit start
+    public void setCanDuplicate(boolean canDuplicate) {
+        this.entityData.set(Allay.DATA_CAN_DUPLICATE, canDuplicate);
+    }
+    // CraftBukkit end
+
     @Override
     protected Brain.Provider<Allay> brainProvider() {
         return Brain.provider(MEMORY_TYPES, SENSOR_TYPES);
@@ -247,6 +_,7 @@
     public void aiStep() {
         super.aiStep();
         if (!this.level().isClientSide && this.isAlive() && this.tickCount % 10 == 0) {
+            ketting$heal$regainReason = org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.REGEN;
             this.heal(1.0F);
         }
 
@@ -316,6 +_,13 @@
         ItemStack itemstack1 = this.getItemInHand(InteractionHand.MAIN_HAND);
         if (this.isDancing() && this.isDuplicationItem(itemstack) && this.canDuplicate()) {
             this.duplicateAllay();
+            // CraftBukkit start - handle cancel duplication
+            Allay allay = ketting$duplicateAllay$returnValue;
+            ketting$duplicateAllay$returnValue = null;
+            if (allay == null) {
+                return InteractionResult.SUCCESS;
+            }
+            // CraftBukkit end
             this.level().broadcastEntityEvent(this, (byte)18);
             this.level().playSound(p_218361_, this, SoundEvents.AMETHYST_BLOCK_CHIME, SoundSource.NEUTRAL, 2.0F, 1.0F);
             this.removeInteractionItem(p_218361_, itemstack);
@@ -370,9 +_,9 @@
     public boolean wantsToPickUp(ItemStack p_218387_) {
         ItemStack itemstack = this.getItemInHand(InteractionHand.MAIN_HAND);
         return !itemstack.isEmpty()
-            && this.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)
             && this.inventory.canAddItem(p_218387_)
-            && this.allayConsidersItemEqual(itemstack, p_218387_);
+            && this.allayConsidersItemEqual(itemstack, p_218387_)
+            && net.neoforged.neoforge.event.EventHooks.getMobGriefingEvent(this.level(), this);
     }
 
     private boolean allayConsidersItemEqual(ItemStack p_252278_, ItemStack p_250405_) {
@@ -433,6 +_,7 @@
     }
 
     private boolean shouldStopDancing() {
+        if (this.forceDancing) {return false;} // CraftBukkit
         return this.jukeboxPos == null
             || !this.jukeboxPos.closerToCenterThan(this.position(), (double)GameEvent.JUKEBOX_PLAY.getNotificationRadius())
             || !this.level().getBlockState(this.jukeboxPos).is(Blocks.JUKEBOX);
@@ -518,6 +_,7 @@
         return DUPLICATION_ITEM.test(p_239736_);
     }
 
+    public @Nullable Allay ketting$duplicateAllay$returnValue = null;
     public void duplicateAllay() {
         Allay allay = EntityType.ALLAY.create(this.level());
         if (allay != null) {
@@ -525,8 +_,11 @@
             allay.setPersistenceRequired();
             allay.resetDuplicationCooldown();
             this.resetDuplicationCooldown();
+            this.level().prepareAddFreshEntity(org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DUPLICATION);
             this.level().addFreshEntity(allay);
         }
+
+        ketting$duplicateAllay$returnValue = allay;
     }
 
     public void resetDuplicationCooldown() {
