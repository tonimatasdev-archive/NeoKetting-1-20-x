--- a/net/minecraft/world/entity/animal/horse/SkeletonTrapGoal.java
+++ b/net/minecraft/world/entity/animal/horse/SkeletonTrapGoal.java
@@ -28,6 +_,10 @@
     @Override
     public void tick() {
         ServerLevel serverlevel = (ServerLevel)this.horse.level();
+        // Forge: Trigger the trap in a tick task to avoid crashes when mods add goals to skeleton horses
+        // (MC-206338/Forge PR #7509)
+        serverlevel.getServer().tell(new net.minecraft.server.TickTask(serverlevel.getServer().getTickCount(), () -> {
+        if (!this.horse.isAlive()) return;
         DifficultyInstance difficultyinstance = serverlevel.getCurrentDifficultyAt(this.horse.blockPosition());
         this.horse.setTrap(false);
         this.horse.setTamed(true);
@@ -36,10 +_,11 @@
         if (lightningbolt != null) {
             lightningbolt.moveTo(this.horse.getX(), this.horse.getY(), this.horse.getZ());
             lightningbolt.setVisualOnly(true);
-            serverlevel.addFreshEntity(lightningbolt);
+            serverlevel.strikeLightning(lightningbolt, org.bukkit.event.weather.LightningStrikeEvent.Cause.TRAP); // CraftBukkit
             Skeleton skeleton = this.createSkeleton(difficultyinstance, this.horse);
             if (skeleton != null) {
                 skeleton.startRiding(this.horse);
+                serverlevel.prepareAddFreshEntityWithPassengers(org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.TRAP);
                 serverlevel.addFreshEntityWithPassengers(skeleton);
 
                 for(int i = 0; i < 3; ++i) {
@@ -49,12 +_,14 @@
                         if (skeleton1 != null) {
                             skeleton1.startRiding(abstracthorse);
                             abstracthorse.push(this.horse.getRandom().triangle(0.0, 1.1485), 0.0, this.horse.getRandom().triangle(0.0, 1.1485));
+                            serverlevel.prepareAddFreshEntityWithPassengers(org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.JOCKEY);
                             serverlevel.addFreshEntityWithPassengers(abstracthorse);
                         }
                     }
                 }
             }
         }
+        }));
     }
 
     @Nullable
