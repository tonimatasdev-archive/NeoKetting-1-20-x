--- a/net/minecraft/world/inventory/MenuType.java
+++ b/net/minecraft/world/inventory/MenuType.java
@@ -8,7 +_,7 @@
 import net.minecraft.world.flag.FeatureFlagSet;
 import net.minecraft.world.flag.FeatureFlags;
 
-public class MenuType<T extends AbstractContainerMenu> implements FeatureElement {
+public class MenuType<T extends AbstractContainerMenu> implements FeatureElement, net.neoforged.neoforge.common.extensions.IMenuTypeExtension<T> {
     public static final MenuType<ChestMenu> GENERIC_9x1 = register("generic_9x1", ChestMenu::oneRow);
     public static final MenuType<ChestMenu> GENERIC_9x2 = register("generic_9x2", ChestMenu::twoRows);
     public static final MenuType<ChestMenu> GENERIC_9x3 = register("generic_9x3", ChestMenu::threeRows);
@@ -26,7 +_,11 @@
     public static final MenuType<FurnaceMenu> FURNACE = register("furnace", FurnaceMenu::new);
     public static final MenuType<GrindstoneMenu> GRINDSTONE = register("grindstone", GrindstoneMenu::new);
     public static final MenuType<HopperMenu> HOPPER = register("hopper", HopperMenu::new);
-    public static final MenuType<LecternMenu> LECTERN = register("lectern", (p_39992_, p_39993_) -> new LecternMenu(p_39992_));
+    public static final MenuType<LecternMenu> LECTERN = register("lectern", (p_39992_, p_39993_) -> {
+        LecternMenu menu = new LecternMenu(p_39992_);
+        menu.player = (org.bukkit.entity.Player) p_39993_.player.getBukkitEntity(); // CraftBukkit
+        return menu;
+    });
     public static final MenuType<LoomMenu> LOOM = register("loom", LoomMenu::new);
     public static final MenuType<MerchantMenu> MERCHANT = register("merchant", MerchantMenu::new);
     public static final MenuType<ShulkerBoxMenu> SHULKER_BOX = register("shulker_box", ShulkerBoxMenu::new);
@@ -52,6 +_,14 @@
 
     public T create(int p_39986_, Inventory p_39987_) {
         return this.constructor.create(p_39986_, p_39987_);
+    }
+
+    @Override
+    public T create(int windowId, Inventory playerInv, net.minecraft.network.FriendlyByteBuf extraData) {
+        if (this.constructor instanceof net.neoforged.neoforge.network.IContainerFactory) {
+            return ((net.neoforged.neoforge.network.IContainerFactory<T>) this.constructor).create(windowId, playerInv, extraData);
+        }
+        return create(windowId, playerInv);
     }
 
     @Override
