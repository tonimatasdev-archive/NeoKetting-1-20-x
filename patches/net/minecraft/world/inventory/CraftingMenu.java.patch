--- a/net/minecraft/world/inventory/CraftingMenu.java
+++ b/net/minecraft/world/inventory/CraftingMenu.java
@@ -28,6 +_,9 @@
     private final ResultContainer resultSlots = new ResultContainer();
     private final ContainerLevelAccess access;
     private final Player player;
+    // CraftBukkit start
+    private org.bukkit.craftbukkit.v1_20_R3.inventory.CraftInventoryView bukkitEntity = null;
+    // CraftBukkit end
 
     public CraftingMenu(int p_39353_, Inventory p_39354_) {
         this(p_39353_, p_39354_, ContainerLevelAccess.NULL);
@@ -37,6 +_,10 @@
         super(MenuType.CRAFTING, p_39356_);
         this.access = p_39358_;
         this.player = p_39357_.player;
+        // CraftBukkit start - Switched order of IInventory construction and stored player
+        ((TransientCraftingContainer) this.craftSlots).setOwner(this.player);
+        ((TransientCraftingContainer) this.craftSlots).resultInventory = this.resultSlots;
+        // CraftBukkit end
         this.addSlot(new ResultSlot(p_39357_.player, this.craftSlots, this.resultSlots, 0, 124, 35));
 
         for(int i = 0; i < 3; ++i) {
@@ -61,6 +_,7 @@
     ) {
         if (!p_150548_.isClientSide) {
             ServerPlayer serverplayer = (ServerPlayer)p_150549_;
+            org.kettingpowered.ketting.utils.InventoryViewHelper.setContainerOwner(serverplayer); //Ketting
             ItemStack itemstack = ItemStack.EMPTY;
             Optional<RecipeHolder<CraftingRecipe>> optional = p_150548_.getServer().getRecipeManager().getRecipeFor(RecipeType.CRAFTING, p_150550_, p_150548_);
             if (optional.isPresent()) {
@@ -73,6 +_,8 @@
                     }
                 }
             }
+            itemstack = org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory.callPreCraftEvent(p_150550_, p_150551_, itemstack, p_150547_.getBukkitView(), optional.map(RecipeHolder::toBukkitRecipe).orElse(null) instanceof net.minecraft.world.item.crafting.RepairItemRecipe); // CraftBukkit
+            org.kettingpowered.ketting.utils.InventoryViewHelper.clearContainerOwner(); //Ketting
 
             p_150551_.setItem(0, itemstack);
             p_150547_.setRemoteSlot(0, itemstack);
@@ -109,6 +_,7 @@
 
     @Override
     public boolean stillValid(Player p_39368_) {
+        if (!this.checkReachable) return true; // CraftBukkit
         return stillValid(this.access, p_39368_, Blocks.CRAFTING_TABLE);
     }
 
@@ -193,4 +_,17 @@
     public boolean shouldMoveToInventory(int p_150553_) {
         return p_150553_ != this.getResultSlotIndex();
     }
+
+    // CraftBukkit start
+    @Override
+    public org.bukkit.craftbukkit.v1_20_R3.inventory.CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        org.bukkit.craftbukkit.v1_20_R3.inventory.CraftInventoryCrafting inventory = new org.bukkit.craftbukkit.v1_20_R3.inventory.CraftInventoryCrafting(this.craftSlots, this.resultSlots);
+        bukkitEntity = new org.bukkit.craftbukkit.v1_20_R3.inventory.CraftInventoryView(this.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
 }
