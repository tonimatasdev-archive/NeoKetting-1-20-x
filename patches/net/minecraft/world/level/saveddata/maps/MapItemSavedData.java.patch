--- a/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
+++ b/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
@@ -52,6 +_,13 @@
     private final Map<String, MapFrame> frameMarkers = Maps.newHashMap();
     private int trackedDecorationCount;
 
+    // CraftBukkit start
+    public final org.bukkit.craftbukkit.v1_20_R3.map.CraftMapView mapView;
+    private org.bukkit.craftbukkit.v1_20_R3.CraftServer server;
+    public java.util.UUID uniqueId = null;
+    public String id;
+    // CraftBukkit end
+
     public static SavedData.Factory<MapItemSavedData> factory() {
         return new SavedData.Factory<>(() -> {
             throw new IllegalStateException("Should never create an empty map saved data");
@@ -69,6 +_,10 @@
         this.unlimitedTracking = p_164772_;
         this.locked = p_164773_;
         this.setDirty();
+        // CraftBukkit start
+        mapView = new org.bukkit.craftbukkit.v1_20_R3.map.CraftMapView(this);
+        server = (org.bukkit.craftbukkit.v1_20_R3.CraftServer) org.bukkit.Bukkit.getServer();
+        // CraftBukkit end
     }
 
     public static MapItemSavedData createFresh(
@@ -87,9 +_,27 @@
     }
 
     public static MapItemSavedData load(CompoundTag p_164808_) {
-        ResourceKey<Level> resourcekey = DimensionType.parseLegacy(new Dynamic<>(NbtOps.INSTANCE, p_164808_.get("dimension")))
-            .resultOrPartial(LOGGER::error)
-            .orElseThrow(() -> new IllegalArgumentException("Invalid map dimension: " + p_164808_.get("dimension")));
+        // CraftBukkit start
+        ResourceKey<Level> resourcekey = DimensionType.parseLegacy(new Dynamic<>(NbtOps.INSTANCE, p_164808_.get("dimension"))).resultOrPartial(LOGGER::error).orElseGet(() -> {
+            long least = p_164808_.getLong("UUIDLeast");
+            long most = p_164808_.getLong("UUIDMost");
+
+            if (least != 0L && most != 0L) {
+                java.util.UUID uniqueId = new java.util.UUID(most, least);
+
+                org.bukkit.craftbukkit.v1_20_R3.CraftWorld world = (org.bukkit.craftbukkit.v1_20_R3.CraftWorld) org.bukkit.Bukkit.getWorld(uniqueId);
+                // Check if the stored world details are correct.
+                if (world == null) {
+                     /* All Maps which do not have their valid world loaded are set to a dimension which hopefully won't be reached.
+                        This is to prevent them being corrupted with the wrong map data. */
+                    // PAIL: Use Vanilla exception handling for now
+                } else {
+                    return world.getHandle().dimension();
+                }
+            }
+            throw new IllegalArgumentException("Invalid map dimension: " + p_164808_.get("dimension"));
+            // CraftBukkit end
+        });
         int i = p_164808_.getInt("xCenter");
         int j = p_164808_.getInt("zCenter");
         byte b0 = (byte)Mth.clamp(p_164808_.getByte("scale"), 0, 4);
@@ -143,6 +_,25 @@
             .encodeStart(NbtOps.INSTANCE, this.dimension.location())
             .resultOrPartial(LOGGER::error)
             .ifPresent(p_77954_ -> p_77956_.put("dimension", p_77954_));
+        // CraftBukkit start
+        if (true) {
+            if (this.uniqueId == null) {
+                for (org.bukkit.World world : server.getWorlds()) {
+                    org.bukkit.craftbukkit.v1_20_R3.CraftWorld cWorld = (org.bukkit.craftbukkit.v1_20_R3.CraftWorld) world;
+                    if (cWorld.getHandle().dimension() == this.dimension) {
+                        this.uniqueId = cWorld.getUID();
+                        break;
+                    }
+                }
+            }
+             /* Perform a second check to see if a matching world was found, this is a necessary
+                change incase Maps are forcefully unlinked from a World and lack a UID.*/
+            if (this.uniqueId != null) {
+                p_77956_.putLong("UUIDLeast", this.uniqueId.getLeastSignificantBits());
+                p_77956_.putLong("UUIDMost", this.uniqueId.getMostSignificantBits());
+            }
+        }
+        // CraftBukkit end
         p_77956_.putInt("xCenter", this.centerX);
         p_77956_.putInt("zCenter", this.centerZ);
         p_77956_.putByte("scale", this.scale);
@@ -514,7 +_,7 @@
             this.player = p_77970_;
         }
 
-        private MapItemSavedData.MapPatch createPatch() {
+        private MapItemSavedData.MapPatch createPatch(byte[] buffer) { // CraftBukkit
             int i = this.minDirtyX;
             int j = this.minDirtyY;
             int k = this.maxDirtyX + 1 - this.minDirtyX;
@@ -523,7 +_,7 @@
 
             for(int i1 = 0; i1 < k; ++i1) {
                 for(int j1 = 0; j1 < l; ++j1) {
-                    abyte[i1 + j1 * k] = MapItemSavedData.this.colors[i + i1 + (j + j1) * 128];
+                    abyte[i1 + j1 * k] = buffer[i + i1 + (j + j1) * 128]; // CraftBukkit
                 }
             }
 
@@ -533,17 +_,27 @@
         @Nullable
         Packet<?> nextUpdatePacket(int p_164816_) {
             MapItemSavedData.MapPatch mapitemsaveddata$mappatch;
+            org.bukkit.craftbukkit.v1_20_R3.map.RenderData render = MapItemSavedData.this.mapView.render((org.bukkit.craftbukkit.v1_20_R3.entity.CraftPlayer) this.player.getBukkitEntity()); // CraftBukkit
             if (this.dirtyData) {
                 this.dirtyData = false;
-                mapitemsaveddata$mappatch = this.createPatch();
+                mapitemsaveddata$mappatch = this.createPatch(render.buffer); // CraftBukkit
             } else {
                 mapitemsaveddata$mappatch = null;
             }
 
             Collection<MapDecoration> collection;
-            if (this.dirtyDecorations && this.tick++ % 5 == 0) {
+            if (true || this.dirtyDecorations && this.tick++ % 5 == 0) { // CraftBukkit - custom maps don't update this yet
                 this.dirtyDecorations = false;
-                collection = MapItemSavedData.this.decorations.values();
+                // CraftBukkit start
+                java.util.Collection<MapDecoration> icons = new java.util.ArrayList<>();
+
+                for (org.bukkit.map.MapCursor cursor : render.cursors) {
+                    if (cursor.isVisible()) {
+                        icons.add(new MapDecoration(MapDecoration.Type.byIcon(cursor.getRawType()), cursor.getX(), cursor.getY(), cursor.getDirection(), org.bukkit.craftbukkit.v1_20_R3.util.CraftChatMessage.fromStringOrNull(cursor.getCaption())));
+                    }
+                }
+                collection = icons;
+                // CraftBukkit end
             } else {
                 collection = null;
             }
