--- a/net/minecraft/world/level/portal/PortalForcer.java
+++ b/net/minecraft/world/level/portal/PortalForcer.java
@@ -20,7 +_,7 @@
 import net.minecraft.world.level.border.WorldBorder;
 import net.minecraft.world.level.levelgen.Heightmap;
 
-public class PortalForcer {
+public class PortalForcer implements net.neoforged.neoforge.common.util.ITeleporter {
     private static final int TICKET_RADIUS = 3;
     private static final int SEARCH_RADIUS = 128;
     private static final int CREATE_RADIUS = 16;
@@ -40,9 +_,18 @@
         this.level = p_77650_;
     }
 
+    //Ketting start
+    private final java.util.concurrent.atomic.AtomicReference<Optional<java.lang.Integer>> ketting$findPortalAround$i = new java.util.concurrent.atomic.AtomicReference<>(Optional.empty());
+    public Optional<BlockUtil.FoundRectangle> findPortalAround(BlockPos p_192986_, WorldBorder p_192988_, int i) {
+        ketting$findPortalAround$i.set(Optional.of(i));
+        return this.findPortalAround(p_192986_, true, p_192988_); // Search Radius
+    }
+
     public Optional<BlockUtil.FoundRectangle> findPortalAround(BlockPos p_192986_, boolean p_192987_, WorldBorder p_192988_) {
         PoiManager poimanager = this.level.getPoiManager();
-        int i = p_192987_ ? 16 : 128;
+        int i = ketting$findPortalAround$i.getAndSet(Optional.empty()).orElse(p_192987_ ? 16 : 128);
+        //Ketting end
+
         poimanager.ensureLoadedAndValid(this.level, p_192986_, i);
         Optional<PoiRecord> optional = poimanager.getInSquare(p_230634_ -> p_230634_.is(PoiTypes.NETHER_PORTAL), p_192986_, i, PoiManager.Occupancy.ANY)
             .filter(p_192981_ -> p_192988_.isWithinBounds(p_192981_.getPos()))
@@ -69,6 +_,16 @@
         );
     }
 
+    //Ketting start
+    private final java.util.concurrent.atomic.AtomicReference<net.minecraft.world.entity.Entity> ketting$createPortal$entity = new java.util.concurrent.atomic.AtomicReference<>(null);
+    private final java.util.concurrent.atomic.AtomicInteger ketting$createPortal$createRadius = new java.util.concurrent.atomic.AtomicInteger(16);
+    public Optional<BlockUtil.FoundRectangle> createPortal(BlockPos p_77667_, Direction.Axis p_77668_, net.minecraft.world.entity.Entity entity, int createRadius) {
+        ketting$createPortal$entity.set(entity);
+        ketting$createPortal$createRadius.set(createRadius);
+        // CraftBukkit start
+        return this.createPortal(p_77667_, p_77668_);
+    }
+
     public Optional<BlockUtil.FoundRectangle> createPortal(BlockPos p_77667_, Direction.Axis p_77668_) {
         Direction direction = Direction.get(Direction.AxisDirection.POSITIVE, p_77668_);
         double d0 = -1.0;
@@ -79,7 +_,7 @@
         int i = Math.min(this.level.getMaxBuildHeight(), this.level.getMinBuildHeight() + this.level.getLogicalHeight()) - 1;
         BlockPos.MutableBlockPos blockpos$mutableblockpos = p_77667_.mutable();
 
-        for(BlockPos.MutableBlockPos blockpos$mutableblockpos1 : BlockPos.spiralAround(p_77667_, 16, Direction.EAST, Direction.SOUTH)) {
+        for(BlockPos.MutableBlockPos blockpos$mutableblockpos1 : BlockPos.spiralAround(p_77667_, ketting$createPortal$createRadius.getAndSet(16), Direction.EAST, Direction.SOUTH)) { // CraftBukkit
             int j = Math.min(i, this.level.getHeight(Heightmap.Types.MOTION_BLOCKING, blockpos$mutableblockpos1.getX(), blockpos$mutableblockpos1.getZ()));
             int k = 1;
             if (worldborder.isWithinBounds(blockpos$mutableblockpos1) && worldborder.isWithinBounds(blockpos$mutableblockpos1.move(direction, 1))) {
@@ -124,10 +_,12 @@
             d0 = d1;
         }
 
+        org.bukkit.craftbukkit.v1_20_R3.util.BlockStateListPopulator blockList = new org.bukkit.craftbukkit.v1_20_R3.util.BlockStateListPopulator(this.level); // CraftBukkit - Use BlockStateListPopulator
         if (d0 == -1.0) {
             int k1 = Math.max(this.level.getMinBuildHeight() - -1, 70);
             int i2 = i - 9;
             if (i2 < k1) {
+                ketting$createPortal$entity.set(null);
                 return Optional.empty();
             }
 
@@ -145,6 +_,7 @@
                             blockpos, j3 * direction.getStepX() + i3 * direction1.getStepX(), k3, j3 * direction.getStepZ() + i3 * direction1.getStepZ()
                         );
                         this.level.setBlockAndUpdate(blockpos$mutableblockpos, blockstate1);
+                        blockList.setBlock(blockpos$mutableblockpos, blockstate1, 3); // CraftBukkit
                     }
                 }
             }
@@ -155,6 +_,7 @@
                 if (l1 == -1 || l1 == 2 || j2 == -1 || j2 == 3) {
                     blockpos$mutableblockpos.setWithOffset(blockpos, l1 * direction.getStepX(), j2, l1 * direction.getStepZ());
                     this.level.setBlock(blockpos$mutableblockpos, Blocks.OBSIDIAN.defaultBlockState(), 3);
+                    blockList.setBlock(blockpos$mutableblockpos, Blocks.OBSIDIAN.defaultBlockState(), 3); // CraftBukkit
                 }
             }
         }
@@ -165,9 +_,21 @@
             for(int l2 = 0; l2 < 3; ++l2) {
                 blockpos$mutableblockpos.setWithOffset(blockpos, k2 * direction.getStepX(), l2, k2 * direction.getStepZ());
                 this.level.setBlock(blockpos$mutableblockpos, blockstate, 18);
+                blockList.setBlock(blockpos$mutableblockpos, blockstate, 18); // CraftBukkit
             }
         }
 
+        // CraftBukkit start
+        org.bukkit.World bworld = this.level.getWorld();
+        net.minecraft.world.entity.Entity entity = ketting$createPortal$entity.getAndSet(null);
+        org.bukkit.event.world.PortalCreateEvent event = new org.bukkit.event.world.PortalCreateEvent((java.util.List)blockList.getList(), bworld, (entity == null) ? null : entity.getBukkitEntity(), org.bukkit.event.world.PortalCreateEvent.CreateReason.NETHER_PAIR);
+
+        this.level.getCraftServer().getPluginManager().callEvent(event);
+        if (event.isCancelled()) {
+            return Optional.empty();
+        }
+        blockList.updateList();
+        // CraftBukkit end
         return Optional.of(new BlockUtil.FoundRectangle(blockpos.immutable(), 2, 3));
     }
 
