--- a/net/minecraft/world/level/storage/PlayerDataStorage.java
+++ b/net/minecraft/world/level/storage/PlayerDataStorage.java
@@ -27,6 +_,7 @@
     }
 
     public void save(Player p_78434_) {
+        if (org.spigotmc.SpigotConfig.disablePlayerDataSaving) return; // Spigot
         try {
             CompoundTag compoundtag = p_78434_.saveWithoutId(new CompoundTag());
             Path path = this.playerDir.toPath();
@@ -35,6 +_,7 @@
             Path path2 = path.resolve(p_78434_.getStringUUID() + ".dat");
             Path path3 = path.resolve(p_78434_.getStringUUID() + ".dat_old");
             Util.safeReplaceFile(path2, path1, path3);
+            net.neoforged.neoforge.event.EventHooks.firePlayerSavingEvent(p_78434_, playerDir, p_78434_.getStringUUID());
         } catch (Exception exception) {
             LOGGER.warn("Failed to save player data for {}", p_78434_.getName().getString());
         }
@@ -46,22 +_,68 @@
 
         try {
             File file1 = new File(this.playerDir, p_78436_.getStringUUID() + ".dat");
+            // Spigot Start
+            boolean usingWrongFile = false;
+            if ( !file1.exists() )
+            {
+                file1 = new File( this.playerDir, java.util.UUID.nameUUIDFromBytes( ( "OfflinePlayer:" + p_78436_.getScoreboardName() ).getBytes( "UTF-8" ) ).toString() + ".dat");
+                if ( file1.exists() )
+                {
+                    usingWrongFile = true;
+                    org.bukkit.Bukkit.getServer().getLogger().warning( "Using offline mode UUID file for player " + p_78436_.getScoreboardName() + " as it is the only copy we can find." );
+                }
+            }
+            // Spigot End
+            
             if (file1.exists() && file1.isFile()) {
                 compoundtag = NbtIo.readCompressed(file1.toPath(), NbtAccounter.unlimitedHeap());
             }
+            // Spigot Start
+            if ( usingWrongFile )
+            {
+                file1.renameTo( new File( file1.getPath() + ".offline-read" ) );
+            }
+            // Spigot End
         } catch (Exception exception) {
             LOGGER.warn("Failed to load player data for {}", p_78436_.getName().getString());
         }
 
         if (compoundtag != null) {
+            // CraftBukkit start
+            if (p_78436_ instanceof net.minecraft.server.level.ServerPlayer) {
+                org.bukkit.craftbukkit.v1_20_R3.entity.CraftPlayer player = (org.bukkit.craftbukkit.v1_20_R3.entity.CraftPlayer) p_78436_.getBukkitEntity();
+                // Only update first played if it is older than the one we have
+                long modified = new File(this.playerDir, p_78436_.getUUID().toString() + ".dat").lastModified();
+                if (modified < player.getFirstPlayed()) {
+                    player.setFirstPlayed(modified);
+                }
+            }
+            // CraftBukkit end
             int i = NbtUtils.getDataVersion(compoundtag, -1);
             compoundtag = DataFixTypes.PLAYER.updateToCurrentVersion(this.fixerUpper, compoundtag, i);
             p_78436_.load(compoundtag);
         }
+        net.neoforged.neoforge.event.EventHooks.firePlayerLoadingEvent(p_78436_, playerDir, p_78436_.getStringUUID());
 
         return compoundtag;
     }
 
+    // CraftBukkit start
+    public CompoundTag getPlayerData(String s) {
+        try {
+            File file1 = new File(this.playerDir, s + ".dat");
+
+            if (file1.exists()) {
+                return NbtIo.readCompressed((java.io.InputStream) (new java.io.FileInputStream(file1)), NbtAccounter.unlimitedHeap());
+            }
+        } catch (Exception exception) {
+            LOGGER.warn("Failed to load player data for " + s);
+        }
+
+        return null;
+    }
+    // CraftBukkit end
+
     public String[] getSeenPlayers() {
         String[] astring = this.playerDir.list();
         if (astring == null) {
@@ -76,4 +_,14 @@
 
         return astring;
     }
+
+    public File getPlayerDataFolder() {
+        return playerDir;
+    }
+
+    // CraftBukkit start
+    public File getPlayerDir() {
+        return getPlayerDataFolder();
+    }
+    // CraftBukkit end
 }
