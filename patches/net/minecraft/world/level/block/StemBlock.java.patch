--- a/net/minecraft/world/level/block/StemBlock.java
+++ b/net/minecraft/world/level/block/StemBlock.java
@@ -79,27 +_,33 @@
 
     @Override
     public void randomTick(BlockState p_222538_, ServerLevel p_222539_, BlockPos p_222540_, RandomSource p_222541_) {
+        if (!p_222539_.isAreaLoaded(p_222540_, 1)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light
         if (p_222539_.getRawBrightness(p_222540_, 0) >= 9) {
             float f = CropBlock.getGrowthSpeed(this, p_222539_, p_222540_);
-            if (p_222541_.nextInt((int)(25.0F / f) + 1) == 0) {
+            if (net.neoforged.neoforge.common.CommonHooks.onCropsGrowPre(p_222539_, p_222540_, p_222538_, p_222541_.nextInt((int)(25.0F / f) + 1) == 0)) {
                 int i = p_222538_.getValue(AGE);
                 if (i < 7) {
-                    p_222538_ = p_222538_.setValue(AGE, Integer.valueOf(i + 1));
-                    p_222539_.setBlock(p_222540_, p_222538_, 2);
+                    org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory.handleBlockGrowEvent(p_222539_, p_222540_, p_222538_, 2); // CraftBukkit
                 } else {
                     Direction direction = Direction.Plane.HORIZONTAL.getRandomDirection(p_222541_);
                     BlockPos blockpos = p_222540_.relative(direction);
                     BlockState blockstate = p_222539_.getBlockState(blockpos.below());
-                    if (p_222539_.getBlockState(blockpos).isAir() && (blockstate.is(Blocks.FARMLAND) || blockstate.is(BlockTags.DIRT))) {
+                    if (p_222539_.isEmptyBlock(blockpos) && (blockstate.is(Blocks.FARMLAND) || blockstate.is(BlockTags.DIRT))) { // TODO 1.20.3 PORTING: reimplement canSustainPlant check
                         Registry<Block> registry = p_222539_.registryAccess().registryOrThrow(Registries.BLOCK);
                         Optional<Block> optional = registry.getOptional(this.fruit);
                         Optional<Block> optional1 = registry.getOptional(this.attachedStem);
                         if (optional.isPresent() && optional1.isPresent()) {
+                            // CraftBukkit start
+                            if (!org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory.handleBlockGrowEvent(p_222539_, blockpos, optional.get().defaultBlockState())) {
+                                return;
+                            }
+                            // CraftBukkit end
                             p_222539_.setBlockAndUpdate(blockpos, optional.get().defaultBlockState());
                             p_222539_.setBlockAndUpdate(p_222540_, optional1.get().defaultBlockState().setValue(HorizontalDirectionalBlock.FACING, direction));
                         }
                     }
                 }
+                net.neoforged.neoforge.common.CommonHooks.onCropsGrowPost(p_222539_, p_222540_, p_222538_);
             }
         }
     }
@@ -123,7 +_,7 @@
     public void performBonemeal(ServerLevel p_222528_, RandomSource p_222529_, BlockPos p_222530_, BlockState p_222531_) {
         int i = Math.min(7, p_222531_.getValue(AGE) + Mth.nextInt(p_222528_.random, 2, 5));
         BlockState blockstate = p_222531_.setValue(AGE, Integer.valueOf(i));
-        p_222528_.setBlock(p_222530_, blockstate, 2);
+        org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory.handleBlockGrowEvent(p_222528_, p_222530_, blockstate, 2); // CraftBukkit
         if (i == 7) {
             blockstate.randomTick(p_222528_, p_222530_, p_222528_.random);
         }
@@ -132,5 +_,11 @@
     @Override
     protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> p_57040_) {
         p_57040_.add(AGE);
+    }
+
+    //FORGE START
+    @Override
+    public net.neoforged.neoforge.common.PlantType getPlantType(BlockGetter world, BlockPos pos) {
+        return net.neoforged.neoforge.common.PlantType.CROP;
     }
 }
