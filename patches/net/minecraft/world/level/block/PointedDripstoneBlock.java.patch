--- a/net/minecraft/world/level/block/PointedDripstoneBlock.java
+++ b/net/minecraft/world/level/block/PointedDripstoneBlock.java
@@ -139,6 +_,11 @@
                 && p_154045_.mayBreak(p_154042_)
                 && p_154045_ instanceof ThrownTrident
                 && p_154045_.getDeltaMovement().length() > 0.6) {
+                // CraftBukkit start
+                if (!org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory.callEntityChangeBlockEvent(p_154045_, blockpos, Blocks.AIR.defaultBlockState())) {
+                    return;
+                }
+                // CraftBukkit end
                 p_154042_.destroyBlock(blockpos, true);
             }
         }
@@ -147,7 +_,9 @@
     @Override
     public void fallOn(Level p_154047_, BlockState p_154048_, BlockPos p_154049_, Entity p_154050_, float p_154051_) {
         if (p_154048_.getValue(TIP_DIRECTION) == Direction.UP && p_154048_.getValue(THICKNESS) == DripstoneThickness.TIP) {
+            org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory.blockDamage = org.bukkit.craftbukkit.v1_20_R3.block.CraftBlock.at(p_154047_, p_154049_); // CraftBukkit
             p_154050_.causeFallDamage(p_154051_ + 2.0F, 2.0F, p_154047_.damageSources().stalagmite());
+            org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory.blockDamage = null; // CraftBukkit
         } else {
             super.fallOn(p_154047_, p_154048_, p_154049_, p_154050_, p_154051_);
         }
@@ -184,7 +_,7 @@
 
     @VisibleForTesting
     public static void maybeTransferFluid(BlockState p_221860_, ServerLevel p_221861_, BlockPos p_221862_, float p_221863_) {
-        if (!(p_221863_ > 0.17578125F) || !(p_221863_ > 0.05859375F)) {
+        if (true) { //Neo: remove the water and lava drip chance checks to allow modded fluids to drip into cauldrons
             if (isStalactiteStartPos(p_221860_, p_221861_, p_221862_)) {
                 Optional<PointedDripstoneBlock.FluidInfo> optional = getFluidAboveStalactite(p_221861_, p_221862_, p_221860_);
                 if (!optional.isEmpty()) {
@@ -193,14 +_,12 @@
                     if (fluid == Fluids.WATER) {
                         f = 0.17578125F;
                     } else {
-                        if (fluid != Fluids.LAVA) {
-                            return;
-                        }
 
                         f = 0.05859375F;
                     }
 
-                    if (!(p_221863_ >= f)) {
+                    net.neoforged.neoforge.fluids.FluidType.DripstoneDripInfo dripInfo = fluid.getFluidType().getDripInfo();
+                    if (dripInfo != null && !(p_221863_ >= dripInfo.chance())) {
                         BlockPos blockpos = findTip(p_221860_, p_221861_, p_221862_, 11, false);
                         if (blockpos != null) {
                             if (optional.get().sourceState.is(Blocks.MUD) && fluid == Fluids.WATER) {
@@ -370,17 +_,27 @@
         if (isUnmergedTipWithDirection(blockstate, p_154038_.getOpposite())) {
             createMergedTips(blockstate, p_154036_, blockpos);
         } else if (blockstate.isAir() || blockstate.is(Blocks.WATER)) {
+            ketting$createDripstone$source.set(p_154037_); //Ketting - CraftBukkit
             createDripstone(p_154036_, blockpos, p_154038_, DripstoneThickness.TIP);
         }
     }
 
+    //Ketting start
+    private final static java.util.concurrent.atomic.AtomicReference<BlockPos> ketting$createDripstone$source = new java.util.concurrent.atomic.AtomicReference<>(null);
+    @SuppressWarnings("unused") //Ketting - Keep for CB compat
+    private static void createDripstone(LevelAccessor p_154088_, BlockPos p_154089_, Direction p_154090_, DripstoneThickness p_154091_, BlockPos source) { // CraftBukkit
+        ketting$createDripstone$source.set(source);
+        createDripstone(p_154088_, p_154089_, p_154090_, p_154091_);
+    }
+    //Ketting end
     private static void createDripstone(LevelAccessor p_154088_, BlockPos p_154089_, Direction p_154090_, DripstoneThickness p_154091_) {
         BlockState blockstate = Blocks.POINTED_DRIPSTONE
             .defaultBlockState()
             .setValue(TIP_DIRECTION, p_154090_)
             .setValue(THICKNESS, p_154091_)
             .setValue(WATERLOGGED, Boolean.valueOf(p_154088_.getFluidState(p_154089_).getType() == Fluids.WATER));
-        p_154088_.setBlock(p_154089_, blockstate, 3);
+        BlockPos source = ketting$createDripstone$source.getAndSet(null); //Ketting
+        if (source != null) org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory.handleBlockSpreadEvent(p_154088_, source, p_154089_, blockstate, 3); // CraftBukkit
     }
 
     private static void createMergedTips(BlockState p_154231_, LevelAccessor p_154232_, BlockPos p_154233_) {
@@ -394,7 +_,9 @@
             blockpos1 = p_154233_.below();
         }
 
+        ketting$createDripstone$source.set(p_154233_);
         createDripstone(p_154232_, blockpos, Direction.DOWN, DripstoneThickness.TIP_MERGE);
+        ketting$createDripstone$source.set(p_154233_);
         createDripstone(p_154232_, blockpos1, Direction.UP, DripstoneThickness.TIP_MERGE);
     }
 
@@ -409,7 +_,8 @@
         double d2 = (double)((float)(p_154073_.getY() + 1) - 0.6875F) - 0.0625;
         double d3 = (double)p_154073_.getZ() + 0.5 + vec3.z;
         Fluid fluid = getDripFluid(p_154072_, p_154075_);
-        ParticleOptions particleoptions = fluid.is(FluidTags.LAVA) ? ParticleTypes.DRIPPING_DRIPSTONE_LAVA : ParticleTypes.DRIPPING_DRIPSTONE_WATER;
+        ParticleOptions particleoptions = fluid.getFluidType().getDripInfo() != null ? fluid.getFluidType().getDripInfo().dripParticle() : ParticleTypes.DRIPPING_DRIPSTONE_WATER;
+        if (particleoptions != null)
         p_154072_.addParticle(particleoptions, d1, d2, d3, 0.0, 0.0, 0.0);
     }
 
@@ -561,7 +_,7 @@
     }
 
     private static boolean canFillCauldron(Fluid p_154159_) {
-        return p_154159_ == Fluids.LAVA || p_154159_ == Fluids.WATER;
+        return p_154159_.getFluidType().getDripInfo() != null;
     }
 
     private static boolean canGrow(BlockState p_154141_, BlockState p_154142_) {
