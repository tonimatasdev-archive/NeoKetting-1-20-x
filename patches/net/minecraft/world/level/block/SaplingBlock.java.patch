--- a/net/minecraft/world/level/block/SaplingBlock.java
+++ b/net/minecraft/world/level/block/SaplingBlock.java
@@ -27,6 +_,7 @@
     protected static final float AABB_OFFSET = 6.0F;
     protected static final VoxelShape SHAPE = Block.box(2.0, 0.0, 2.0, 14.0, 12.0, 14.0);
     protected final TreeGrower treeGrower;
+    public static org.bukkit.TreeType treeType; // CraftBukkit
 
     @Override
     public MapCodec<? extends SaplingBlock> codec() {
@@ -46,7 +_,8 @@
 
     @Override
     public void randomTick(BlockState p_222011_, ServerLevel p_222012_, BlockPos p_222013_, RandomSource p_222014_) {
-        if (p_222012_.getMaxLocalRawBrightness(p_222013_.above()) >= 9 && p_222014_.nextInt(7) == 0) {
+        if (!p_222012_.isAreaLoaded(p_222013_, 1)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light
+        if (p_222012_.getMaxLocalRawBrightness(p_222013_.above()) >= 9 && p_222014_.nextFloat() < (p_222012_.spigotConfig.saplingModifier / (100.0f * 7))) { // Spigot - SPIGOT-7159: Better modifier resolution
             this.advanceTree(p_222012_, p_222013_, p_222011_, p_222014_);
         }
     }
@@ -55,7 +_,32 @@
         if (p_222003_.getValue(STAGE) == 0) {
             p_222001_.setBlock(p_222002_, p_222003_.cycle(STAGE), 4);
         } else {
-            this.treeGrower.growTree(p_222001_, p_222001_.getChunkSource().getGenerator(), p_222002_, p_222003_, p_222004_);
+            // CraftBukkit start
+            if (p_222001_.captureTreeGeneration) {
+                this.treeGrower.growTree(p_222001_, p_222001_.getChunkSource().getGenerator(), p_222002_, p_222003_, p_222004_);
+            } else {
+                p_222001_.captureTreeGeneration = true;
+                this.treeGrower.growTree(p_222001_, p_222001_.getChunkSource().getGenerator(), p_222002_, p_222003_, p_222004_);
+                p_222001_.captureTreeGeneration = false;
+                if (p_222001_.capturedBlockStates.size() > 0) {
+                    org.bukkit.TreeType treeType = SaplingBlock.treeType;
+                    SaplingBlock.treeType = null;
+                    org.bukkit.Location location = org.bukkit.craftbukkit.v1_20_R3.util.CraftLocation.toBukkit(p_222002_, p_222001_.getWorld());
+                    java.util.List<org.bukkit.block.BlockState> blocks = new java.util.ArrayList<>(p_222001_.capturedBlockStates.values());
+                    p_222001_.capturedBlockStates.clear();
+                    org.bukkit.event.world.StructureGrowEvent event = null;
+                    if (treeType != null) {
+                        event = new org.bukkit.event.world.StructureGrowEvent(location, treeType, false, null, blocks);
+                        org.bukkit.Bukkit.getPluginManager().callEvent(event);
+                    }
+                    if (event == null || !event.isCancelled()) {
+                        for (org.bukkit.block.BlockState blockstate : blocks) {
+                            blockstate.update(true);
+                        }
+                    }
+                }
+            }
+            // CraftBukkit end
         }
     }
 
