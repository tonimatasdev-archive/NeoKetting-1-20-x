--- a/net/minecraft/commands/CommandSourceStack.java
+++ b/net/minecraft/commands/CommandSourceStack.java
@@ -43,7 +_,7 @@
 import net.minecraft.world.phys.Vec2;
 import net.minecraft.world.phys.Vec3;
 
-public class CommandSourceStack implements ExecutionCommandSource<CommandSourceStack>, SharedSuggestionProvider {
+public class CommandSourceStack implements ExecutionCommandSource<CommandSourceStack>, SharedSuggestionProvider, net.neoforged.neoforge.common.extensions.ICommandSourceStackExtension {
     public static final SimpleCommandExceptionType ERROR_NOT_PLAYER = new SimpleCommandExceptionType(Component.translatable("permissions.requires.player"));
     public static final SimpleCommandExceptionType ERROR_NOT_ENTITY = new SimpleCommandExceptionType(Component.translatable("permissions.requires.entity"));
     public final CommandSource source;
@@ -61,6 +_,8 @@
     private final Vec2 rotation;
     private final CommandSigningContext signingContext;
     private final TaskChainer chatMessageChainer;
+    public volatile com.mojang.brigadier.tree.CommandNode currentCommand; // CraftBukkit
+    public volatile boolean isForgeCommand; // Ketting
 
     public CommandSourceStack(
         CommandSource p_81302_,
@@ -388,9 +_,23 @@
 
     @Override
     public boolean hasPermission(int p_81370_) {
+        // CraftBukkit start
+        com.mojang.brigadier.tree.CommandNode currentCommand = this.currentCommand;
+        if (currentCommand != null && !org.kettingpowered.ketting.command.ForgeCommand.checkIfForgeCommand(currentCommand)) { //Ketting - skip if forge command
+            return hasPermission(p_81370_, org.bukkit.craftbukkit.v1_20_R3.command.VanillaCommandWrapper.getPermission(currentCommand));
+        }
+        // CraftBukkit end
+        
         return this.permissionLevel >= p_81370_;
     }
 
+    // CraftBukkit start
+    public boolean hasPermission(int i, String bukkitPermission) {
+        // World is null when loading functions
+        return ((getLevel() == null || !getLevel().getCraftServer().ignoreVanillaPermissions) && this.permissionLevel >= i) || getBukkitSender().hasPermission(bukkitPermission);
+    }
+    // CraftBukkit end
+
     public Vec3 getPosition() {
         return this.worldPosition;
     }
@@ -501,13 +_,13 @@
         Component component = Component.translatable("chat.type.admin", this.getDisplayName(), p_81367_).withStyle(ChatFormatting.GRAY, ChatFormatting.ITALIC);
         if (this.server.getGameRules().getBoolean(GameRules.RULE_SENDCOMMANDFEEDBACK)) {
             for(ServerPlayer serverplayer : this.server.getPlayerList().getPlayers()) {
-                if (serverplayer != this.source && this.server.getPlayerList().isOp(serverplayer.getGameProfile())) {
+                if (serverplayer != this.source && serverplayer.getBukkitEntity().hasPermission("minecraft.admin.command_feedback")) { // CraftBukkit
                     serverplayer.sendSystemMessage(component);
                 }
             }
         }
 
-        if (this.source != this.server && this.server.getGameRules().getBoolean(GameRules.RULE_LOGADMINCOMMANDS)) {
+        if (this.source != this.server && this.server.getGameRules().getBoolean(GameRules.RULE_LOGADMINCOMMANDS) && !org.spigotmc.SpigotConfig.silentCommandBlocks) { // Spigot
             this.server.sendSystemMessage(component);
         }
     }
@@ -576,6 +_,12 @@
         return this.level.enabledFeatures();
     }
 
+    // CraftBukkit start
+    public org.bukkit.command.CommandSender getBukkitSender() {
+        return source.getBukkitSender(this);
+    }
+    // CraftBukkit end
+    
     @Override
     public CommandDispatcher<CommandSourceStack> dispatcher() {
         return this.getServer().getFunctions().getDispatcher();
