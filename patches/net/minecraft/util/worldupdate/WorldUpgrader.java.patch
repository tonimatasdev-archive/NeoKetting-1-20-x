--- a/net/minecraft/util/worldupdate/WorldUpgrader.java
+++ b/net/minecraft/util/worldupdate/WorldUpgrader.java
@@ -62,7 +_,7 @@
 
     public WorldUpgrader(LevelStorageSource.LevelStorageAccess p_249922_, DataFixer p_250273_, Registry<LevelStem> p_252191_, boolean p_250738_) {
         this.dimensions = p_252191_;
-        this.levels = p_252191_.registryKeySet().stream().map(Registries::levelStemToLevel).collect(Collectors.toUnmodifiableSet());
+        this.levels = java.util.stream.Stream.of(p_249922_.dimensionType).map(Registries::levelStemToLevel).collect(Collectors.toUnmodifiableSet()); // CraftBukkit
         this.eraseCache = p_250738_;
         this.dataFixer = p_250273_;
         this.levelStorage = p_249922_;
@@ -127,9 +_,9 @@
                             if (compoundtag != null) {
                                 int k = ChunkStorage.getVersion(compoundtag);
                                 ChunkGenerator chunkgenerator = this.dimensions.getOrThrow(Registries.levelToLevelStem(resourcekey2)).generator();
-                                CompoundTag compoundtag1 = chunkstorage.upgradeChunkTag(
-                                    resourcekey2, () -> this.overworldDataStorage, compoundtag, chunkgenerator.getTypeNameForDataFixer()
-                                );
+                                CompoundTag compoundtag1 = chunkstorage.upgradeChunkTag(Registries.levelToLevelStem(resourcekey2), () -> { // CraftBukkit
+                                    return this.overworldDataStorage;
+                                }, compoundtag, chunkgenerator.getTypeNameForDataFixer(), chunkpos, null); // CraftBukkit
                                 ChunkPos chunkpos1 = new ChunkPos(compoundtag1.getInt("xPos"), compoundtag1.getInt("zPos"));
                                 if (!chunkpos1.equals(chunkpos)) {
                                     LOGGER.warn("Chunk {} has invalid position {}", chunkpos, chunkpos1);
